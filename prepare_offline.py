#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–°–∫—Ä–∏–ø—Ç –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ offline –ø–∞–∫–µ—Ç–æ–≤ –¥–ª—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –±–µ–∑ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞
–ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –Ω–∞ –º–∞—à–∏–Ω–µ —Å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–æ–º –¥–ª—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –≤—Å–µ—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
"""

import os
import subprocess
import sys
import shutil
from pathlib import Path

def run_command(cmd, description):
    """–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã —Å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º"""
    print(f"üì¶ {description}...")
    try:
        result = subprocess.run(cmd, shell=True, capture_output=True, text=True, check=True)
        print(f"‚úÖ {description} - —É—Å–ø–µ—à–Ω–æ")
        if result.stdout:
            print(f"   –í—ã–≤–æ–¥: {result.stdout.strip()}")
        return True
    except subprocess.CalledProcessError as e:
        print(f"‚ùå {description} - –æ—à–∏–±–∫–∞")
        print(f"   –û—à–∏–±–∫–∞: {e.stderr.strip()}")
        return False

def prepare_offline_packages():
    """–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ offline –ø–∞–∫–µ—Ç–æ–≤ Python"""
    
    print("üöÄ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ offline –ø–∞–∫–µ—Ç–æ–≤ –¥–ª—è SMB File Processor")
    print("=" * 60)
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è offline –ø–∞–∫–µ—Ç–æ–≤
    offline_dir = Path("offline_packages")
    offline_dir.mkdir(exist_ok=True)
    
    # –û—á–∏—Å—Ç–∫–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –ø–∞–∫–µ—Ç–æ–≤
    if offline_dir.exists():
        shutil.rmtree(offline_dir)
    offline_dir.mkdir()
    
    print(f"üìÅ –°–æ–∑–¥–∞–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {offline_dir.absolute()}")
    
    # –°–∫–∞—á–∏–≤–∞–Ω–∏–µ Python –ø–∞–∫–µ—Ç–æ–≤
    print("\nüì¶ –°–∫–∞—á–∏–≤–∞–Ω–∏–µ Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...")
    
    packages = [
        "Flask==3.0.0",
        "Werkzeug==3.0.1", 
        "smbprotocol==1.12.0",
        "pyspnego==0.10.2",
        "cryptography>=3.4.8",
        "ntlm-auth>=1.5.0",
        "requests==2.31.0",
        "python-dotenv==1.0.0",
        "six>=1.16.0",
        "urllib3==2.1.0",
        "pywin32; sys_platform == 'win32'",
        "setuptools",
        "wheel"
    ]
    
    for package in packages:
        if ";" in package and "win32" in package:
            continue  # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º Windows-specific –ø–∞–∫–µ—Ç—ã –¥–ª—è Linux
        
        cmd = f"pip download --dest {offline_dir} --no-deps {package}"
        if not run_command(cmd, f"–°–∫–∞—á–∏–≤–∞–Ω–∏–µ {package}"):
            print(f"‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å {package}, –ø—Ä–æ–±—É–µ–º –±–µ–∑ –≤–µ—Ä—Å–∏–∏...")
            base_package = package.split("==")[0]
            cmd = f"pip download --dest {offline_dir} --no-deps {base_package}"
            run_command(cmd, f"–°–∫–∞—á–∏–≤–∞–Ω–∏–µ {base_package}")
    
    # –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    print("\nüì¶ –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –≤—Å–µ—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...")
    cmd = f"pip download --dest {offline_dir} -r requirements.txt"
    run_command(cmd, "–°–∫–∞—á–∏–≤–∞–Ω–∏–µ –≤—Å–µ—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π")
    
    # –°–æ–∑–¥–∞–Ω–∏–µ requirements-offline.txt
    offline_requirements = offline_dir / "requirements-offline.txt"
    with open(offline_requirements, 'w') as f:
        f.write("# Offline requirements –¥–ª—è SMB File Processor\n")
        f.write("# –£—Å—Ç–∞–Ω–æ–≤–∫–∞: pip install --no-index --find-links ./offline_packages -r requirements-offline.txt\n\n")
        for package in packages:
            if ";" not in package:  # –ò—Å–∫–ª—é—á–∞–µ–º —É—Å–ª–æ–≤–Ω—ã–µ –ø–∞–∫–µ—Ç—ã
                f.write(f"{package}\n")
    
    print(f"üìÑ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª: {offline_requirements}")
    
    # –ü–æ–¥—Å—á–µ—Ç —Å–∫–∞—á–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
    downloaded_files = list(offline_dir.glob("*.whl")) + list(offline_dir.glob("*.tar.gz"))
    print(f"\nüìä –°–∫–∞—á–∞–Ω–æ —Ñ–∞–π–ª–æ–≤: {len(downloaded_files)}")
    
    total_size = sum(f.stat().st_size for f in downloaded_files if f.is_file())
    print(f"üìä –û–±—â–∏–π —Ä–∞–∑–º–µ—Ä: {total_size / 1024 / 1024:.1f} MB")
    
    # –°–ø–∏—Å–æ–∫ —Å–∫–∞—á–∞–Ω–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤
    print("\nüì¶ –°–∫–∞—á–∞–Ω–Ω—ã–µ –ø–∞–∫–µ—Ç—ã:")
    for file in sorted(downloaded_files):
        size_mb = file.stat().st_size / 1024 / 1024
        print(f"   {file.name} ({size_mb:.1f} MB)")
    
    return True

def create_offline_dockerfile():
    """–°–æ–∑–¥–∞–Ω–∏–µ Dockerfile –¥–ª—è offline —É—Å—Ç–∞–Ω–æ–≤–∫–∏"""
    
    dockerfile_content = '''# Offline Dockerfile –¥–ª—è SMB File Processor
# –ò—Å–ø–æ–ª—å–∑—É–µ—Ç –ª–æ–∫–∞–ª—å–Ω—ã–µ –ø–∞–∫–µ—Ç—ã –±–µ–∑ –¥–æ—Å—Ç—É–ø–∞ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É

FROM python:3.11-slim

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –¥–ª—è SMB (–∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –∫—ç—à–∞ apt)
RUN apt-get update && apt-get install -y \\
    gcc \\
    libffi-dev \\
    libssl-dev \\
    smbclient \\
    cifs-utils \\
    && rm -rf /var/lib/apt/lists/*

# –°–æ–∑–¥–∞–Ω–∏–µ —Ä–∞–±–æ—á–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
WORKDIR /app

# –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ offline –ø–∞–∫–µ—Ç–æ–≤
COPY offline_packages/ ./offline_packages/

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –∏–∑ –ª–æ–∫–∞–ª—å–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤
RUN pip install --no-cache-dir --upgrade pip && \\
    pip install --no-index --find-links ./offline_packages -r ./offline_packages/requirements-offline.txt

# –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –∫–æ–¥–∞
COPY app.py .
COPY .env.example .env

# –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –±–µ–∑ –ø—Ä–∞–≤ root –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
RUN adduser --disabled-password --gecos '' appuser && \\
    chown -R appuser:appuser /app
USER appuser

# –û—Ç–∫—Ä—ã—Ç–∏–µ –ø–æ—Ä—Ç–∞
EXPOSE 3000

# –ö–æ–º–∞–Ω–¥–∞ –∑–∞–ø—É—Å–∫–∞
CMD ["python", "app.py"]
'''
    
    with open("Dockerfile.offline", "w") as f:
        f.write(dockerfile_content)
    
    print("üìÑ –°–æ–∑–¥–∞–Ω Dockerfile.offline –¥–ª—è offline —É—Å—Ç–∞–Ω–æ–≤–∫–∏")

def create_offline_docker_compose():
    """–°–æ–∑–¥–∞–Ω–∏–µ docker-compose –¥–ª—è offline —Å–±–æ—Ä–∫–∏"""
    
    compose_content = '''version: '3.8'

services:
  smb-processor:
    build:
      context: .
      dockerfile: Dockerfile.offline
    container_name: smb-file-processor-offline
    ports:
      - "3000:3000"
    environment:
      - SMB_HOST=${SMB_HOST}
      - SMB_SHARE=${SMB_SHARE}
      - SMB_USERNAME=${SMB_USERNAME}
      - SMB_PASSWORD=${SMB_PASSWORD}
      - SMB_DOMAIN=${SMB_DOMAIN:-WORKGROUP}
      - API_URL=${API_URL}
      - PORT=3000
      - SMB_INPUT_DIR=${SMB_INPUT_DIR:-input}
      - SMB_OUTPUT_DIR=${SMB_OUTPUT_DIR:-output}
    restart: unless-stopped
    networks:
      - smb-network

networks:
  smb-network:
    driver: bridge
'''
    
    with open("docker-compose.offline.yml", "w") as f:
        f.write(compose_content)
    
    print("üìÑ –°–æ–∑–¥–∞–Ω docker-compose.offline.yml")

def create_install_script():
    """–°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ offline –ø–∞–∫–µ—Ç–æ–≤"""
    
    install_script = '''#!/bin/bash

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ offline –ø–∞–∫–µ—Ç–æ–≤ SMB3 File Processor
echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ offline –ø–∞–∫–µ—Ç–æ–≤ Python –¥–ª—è SMB3 File Processor..."

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è offline_packages
if [ ! -d "offline_packages" ]; then
    echo "‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è offline_packages –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!"
    echo "   –ó–∞–ø—É—Å—Ç–∏—Ç–µ prepare_offline.py –Ω–∞ –º–∞—à–∏–Ω–µ —Å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–æ–º"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è requirements —Ñ–∞–π–ª–∞
if [ ! -f "offline_packages/requirements-offline.txt" ]; then
    echo "‚ùå –§–∞–π–ª requirements-offline.txt –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ offline_packages!"
    echo "   –ó–∞–ø—É—Å—Ç–∏—Ç–µ prepare_offline.py –Ω–∞ –º–∞—à–∏–Ω–µ —Å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–æ–º"
    exit 1
fi

echo "üìã –ù–∞–π–¥–µ–Ω–æ –ø–∞–∫–µ—Ç–æ–≤ –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏:"
ls -1 offline_packages/*.whl offline_packages/*.tar.gz 2>/dev/null | wc -l

echo "üîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python –ø–∞–∫–µ—Ç–æ–≤ –∏–∑ offline_packages..."

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–∞–∫–µ—Ç–æ–≤
if pip install --no-index --find-links ./offline_packages -r ./offline_packages/requirements-offline.txt; then
    echo "‚úÖ Offline –ø–∞–∫–µ—Ç—ã –¥–ª—è SMB3 —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
    
    echo "üß™ –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏..."
    python -c "
import flask
import smbprotocol
import requests
import dotenv
print('‚úÖ –í—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ –º–æ–¥—É–ª–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ')
print(f'   Flask: {flask.__version__}')
print(f'   SMBProtocol: {smbprotocol.__version__}')
print(f'   Requests: {requests.__version__}')
"
    
    echo ""
    echo "üöÄ –ì–æ—Ç–æ–≤–æ! –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ:"
    echo "   python app.py"
    
else
    echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ offline –ø–∞–∫–µ—Ç–æ–≤"
    echo "   –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤—ã—à–µ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏"
    exit 1
fi
'''
    
    with open("install_offline.sh", "w") as f:
        f.write(install_script)
    
    # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–ø—Ç –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–º
    try:
        os.chmod("install_offline.sh", 0o755)
    except:
        pass  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ chmod –Ω–∞ Windows
    print("üìÑ –°–æ–∑–¥–∞–Ω install_offline.sh")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è requirements.txt
    if not Path("requirements.txt").exists():
        print("‚ùå –§–∞–π–ª requirements.txt –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        sys.exit(1)
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É
    if not run_command("pip --version", "–ü—Ä–æ–≤–µ—Ä–∫–∞ pip"):
        print("‚ùå pip –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω!")
        sys.exit(1)
    
    # –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –ø–∞–∫–µ—Ç–æ–≤
    if not prepare_offline_packages():
        print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ offline –ø–∞–∫–µ—Ç–æ–≤")
        sys.exit(1)
    
    # –°–æ–∑–¥–∞–Ω–∏–µ offline —Ñ–∞–π–ª–æ–≤
    create_offline_dockerfile()
    create_offline_docker_compose()
    create_install_script()
    
    print("\nüéâ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ offline –ø–∞–∫–µ—Ç–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    print("\nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
    print("1. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –≤—Å—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞ –Ω–∞ —Ü–µ–ª–µ–≤—É—é –º–∞—à–∏–Ω—É")
    print("2. –ù–∞ —Ü–µ–ª–µ–≤–æ–π –º–∞—à–∏–Ω–µ –∑–∞–ø—É—Å—Ç–∏—Ç–µ: docker-compose -f docker-compose.offline.yml up --build -d")
    print("3. –ò–ª–∏ –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏: bash install_offline.sh")
    
    print("\nüìÅ –°–æ–∑–¥–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –¥–ª—è offline —É—Å—Ç–∞–Ω–æ–≤–∫–∏:")
    print("   - offline_packages/          (Python –ø–∞–∫–µ—Ç—ã)")
    print("   - Dockerfile.offline         (Offline Dockerfile)")
    print("   - docker-compose.offline.yml (Offline Docker Compose)")
    print("   - install_offline.sh         (–°–∫—Ä–∏–ø—Ç –ª–æ–∫–∞–ª—å–Ω–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏)")

if __name__ == "__main__":
    main()