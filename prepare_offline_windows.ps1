# PowerShell —Å–∫—Ä–∏–ø—Ç –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ offline –ø–∞–∫–µ—Ç–æ–≤ –¥–ª—è Windows
# SMB3 File Processor - –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∞–≤—Ç–æ–Ω–æ–º–Ω–æ–≥–æ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è

param(
    [switch]$SkipDocker = $false,
    [string]$OutputPath = "."
)

Write-Host "üöÄ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ offline –ø–∞–∫–µ—Ç–æ–≤ SMB3 File Processor –¥–ª—è Windows" -ForegroundColor Green
Write-Host "=================================================================" -ForegroundColor Cyan

# –ü—Ä–æ–≤–µ—Ä–∫–∞ PowerShell –≤–µ—Ä—Å–∏–∏
if ($PSVersionTable.PSVersion.Major -lt 5) {
    Write-Host "‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è PowerShell 5.0 –∏–ª–∏ –≤—ã—à–µ!" -ForegroundColor Red
    exit 1
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Python
Write-Host "üêç –ü—Ä–æ–≤–µ—Ä–∫–∞ Python..." -ForegroundColor Yellow
if (-not (Get-Command python -ErrorAction SilentlyContinue)) {
    Write-Host "‚ùå Python –Ω–µ –Ω–∞–π–¥–µ–Ω! –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Python –∏ –¥–æ–±–∞–≤—å—Ç–µ –≤ PATH." -ForegroundColor Red
    Write-Host "   –°–∫–∞—á–∞—Ç—å: https://python.org/downloads/" -ForegroundColor White
    exit 1
}

$pythonVersion = python --version 2>&1
Write-Host "‚úÖ –ù–∞–π–¥–µ–Ω: $pythonVersion" -ForegroundColor Green

# –ü—Ä–æ–≤–µ—Ä–∫–∞ pip
if (-not (Get-Command pip -ErrorAction SilentlyContinue)) {
    Write-Host "‚ùå pip –Ω–µ –Ω–∞–π–¥–µ–Ω!" -ForegroundColor Red
    exit 1
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker (–µ—Å–ª–∏ –Ω–µ –ø—Ä–æ–ø—É—Å–∫–∞–µ–º)
if (-not $SkipDocker) {
    Write-Host "üê≥ –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker..." -ForegroundColor Yellow
    if (-not (Get-Command docker -ErrorAction SilentlyContinue)) {
        Write-Host "‚ùå Docker –Ω–µ –Ω–∞–π–¥–µ–Ω! –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Desktop for Windows." -ForegroundColor Red
        Write-Host "   –°–∫–∞—á–∞—Ç—å: https://docker.com/products/docker-desktop" -ForegroundColor White
        exit 1
    }
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ Docker –∑–∞–ø—É—â–µ–Ω
    try {
        $dockerVersion = docker version --format "{{.Server.Version}}" 2>$null
        if (-not $dockerVersion) {
            Write-Host "‚ùå Docker –Ω–µ –∑–∞–ø—É—â–µ–Ω! –ó–∞–ø—É—Å—Ç–∏—Ç–µ Docker Desktop." -ForegroundColor Red
            exit 1
        }
        Write-Host "‚úÖ Docker —Ä–∞–±–æ—Ç–∞–µ—Ç: $dockerVersion" -ForegroundColor Green
    }
    catch {
        Write-Host "‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Docker!" -ForegroundColor Red
        exit 1
    }
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ requirements.txt
if (-not (Test-Path "requirements.txt")) {
    Write-Host "‚ùå –§–∞–π–ª requirements.txt –Ω–µ –Ω–∞–π–¥–µ–Ω!" -ForegroundColor Red
    exit 1
}

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
Write-Host "üìÅ –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π..." -ForegroundColor Yellow
$offlineDir = Join-Path $OutputPath "offline_packages"
$dockerDir = Join-Path $OutputPath "docker_images"
$scriptDir = Join-Path $OutputPath "scripts"

@($offlineDir, $dockerDir, $scriptDir) | ForEach-Object {
    if (Test-Path $_) {
        Remove-Item $_ -Recurse -Force
    }
    New-Item -ItemType Directory -Force -Path $_ | Out-Null
}

# –°–∫–∞—á–∏–≤–∞–Ω–∏–µ Python –ø–∞–∫–µ—Ç–æ–≤
Write-Host "üì¶ –°–∫–∞—á–∏–≤–∞–Ω–∏–µ Python –ø–∞–∫–µ—Ç–æ–≤..." -ForegroundColor Yellow

try {
    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ pip
    python -m pip install --upgrade pip wheel setuptools
    
    # –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤
    python -m pip download --dest $offlineDir -r requirements.txt
    
    # –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
    python -m pip download --dest $offlineDir wheel setuptools pip
    
    $packageCount = (Get-ChildItem $offlineDir -File).Count
    Write-Host "‚úÖ –°–∫–∞—á–∞–Ω–æ –ø–∞–∫–µ—Ç–æ–≤: $packageCount" -ForegroundColor Green
}
catch {
    Write-Host "‚ùå –û—à–∏–±–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è Python –ø–∞–∫–µ—Ç–æ–≤: $_" -ForegroundColor Red
    exit 1
}

# –°–æ–∑–¥–∞–Ω–∏–µ requirements-offline.txt
Write-Host "üìÑ –°–æ–∑–¥–∞–Ω–∏–µ requirements-offline.txt..." -ForegroundColor Yellow
$offlineRequirements = @"
# Offline requirements –¥–ª—è SMB3 File Processor (Windows)
# –£—Å—Ç–∞–Ω–æ–≤–∫–∞: pip install --no-index --find-links .\offline_packages -r requirements-offline.txt

# Web framework
Flask==3.0.0
Werkzeug==3.0.1

# SMB3 –ø–æ–¥–¥–µ—Ä–∂–∫–∞
smbprotocol==1.12.0
pyspnego==0.10.2
cryptography>=3.4.8
ntlm-auth>=1.5.0

# HTTP requests
requests==2.31.0

# Environment variables
python-dotenv==1.0.0

# –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
six>=1.16.0
urllib3==2.1.0
"@

$offlineRequirements | Out-File -FilePath (Join-Path $offlineDir "requirements-offline.txt") -Encoding UTF8

# Docker –æ–±—Ä–∞–∑—ã (–µ—Å–ª–∏ –Ω–µ –ø—Ä–æ–ø—É—Å–∫–∞–µ–º)
if (-not $SkipDocker) {
    Write-Host "üê≥ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ Docker –æ–±—Ä–∞–∑–æ–≤..." -ForegroundColor Yellow
    
    try {
        # –ó–∞–≥—Ä—É–∑–∫–∞ –±–∞–∑–æ–≤–æ–≥–æ –æ–±—Ä–∞–∑–∞
        Write-Host "   –ó–∞–≥—Ä—É–∑–∫–∞ python:3.11-slim..." -ForegroundColor Gray
        docker pull python:3.11-slim
        
        # –°–±–æ—Ä–∫–∞ offline –æ–±—Ä–∞–∑–∞
        Write-Host "   –°–±–æ—Ä–∫–∞ smb3-processor-offline..." -ForegroundColor Gray
        docker build -f Dockerfile.offline -t smb3-processor-offline .
        
        # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ–±—Ä–∞–∑–æ–≤
        Write-Host "   –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ–±—Ä–∞–∑–æ–≤ –≤ —Ñ–∞–π–ª—ã..." -ForegroundColor Gray
        docker save python:3.11-slim -o (Join-Path $dockerDir "python-3.11-slim.tar")
        docker save smb3-processor-offline -o (Join-Path $dockerDir "smb3-processor-offline.tar")
        
        Write-Host "‚úÖ Docker –æ–±—Ä–∞–∑—ã –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω—ã" -ForegroundColor Green
    }
    catch {
        Write-Host "‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ Docker –æ–±—Ä–∞–∑–æ–≤: $_" -ForegroundColor Red
        Write-Host "   –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º -SkipDocker" -ForegroundColor Yellow
    }
}

# –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–æ–≤ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –¥–ª—è Windows
Write-Host "üìù –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–æ–≤ —É—Å—Ç–∞–Ω–æ–≤–∫–∏..." -ForegroundColor Yellow

# PowerShell —Å–∫—Ä–∏–ø—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏
$installScript = @'
# install_offline_windows.ps1 - –£—Å—Ç–∞–Ω–æ–≤–∫–∞ SMB3 File Processor (Windows offline)

Write-Host "üöÄ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ SMB3 File Processor (Windows offline)" -ForegroundColor Green

# –ü—Ä–æ–≤–µ—Ä–∫–∞ offline_packages
if (-not (Test-Path "offline_packages")) {
    Write-Host "‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è offline_packages –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!" -ForegroundColor Red
    exit 1
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ requirements-offline.txt
if (-not (Test-Path "offline_packages\requirements-offline.txt")) {
    Write-Host "‚ùå –§–∞–π–ª requirements-offline.txt –Ω–µ –Ω–∞–π–¥–µ–Ω!" -ForegroundColor Red
    exit 1
}

Write-Host "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python –ø–∞–∫–µ—Ç–æ–≤ –∏–∑ offline –∞—Ä—Ö–∏–≤–∞..." -ForegroundColor Yellow

# –ü–æ–¥—Å—á–µ—Ç –ø–∞–∫–µ—Ç–æ–≤
$packageCount = (Get-ChildItem offline_packages -Filter "*.whl","*.tar.gz").Count
Write-Host "üìã –ù–∞–π–¥–µ–Ω–æ –ø–∞–∫–µ—Ç–æ–≤ –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏: $packageCount" -ForegroundColor Cyan

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–∞–∫–µ—Ç–æ–≤
try {
    pip install --no-index --find-links .\offline_packages -r .\offline_packages\requirements-offline.txt
    Write-Host "‚úÖ Python –ø–∞–∫–µ—Ç—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ" -ForegroundColor Green
}
catch {
    Write-Host "‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–∞–∫–µ—Ç–æ–≤: $_" -ForegroundColor Red
    exit 1
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
Write-Host "üß™ –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –º–æ–¥—É–ª–µ–π..." -ForegroundColor Yellow
try {
    python -c @"
import flask
import smbprotocol
import requests
import dotenv
print('‚úÖ –í—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ –º–æ–¥—É–ª–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ')
print(f'   Flask: {flask.__version__}')
print(f'   SMBProtocol: {smbprotocol.__version__}')
print(f'   Requests: {requests.__version__}')
"@
    Write-Host "‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–¥—É–ª–µ–π –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ" -ForegroundColor Green
}
catch {
    Write-Host "‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –º–æ–¥—É–ª–µ–π" -ForegroundColor Yellow
}

# –ó–∞–≥—Ä—É–∑–∫–∞ Docker –æ–±—Ä–∞–∑–æ–≤ (–µ—Å–ª–∏ –µ—Å—Ç—å)
if (Test-Path "docker_images") {
    Write-Host "üê≥ –ó–∞–≥—Ä—É–∑–∫–∞ Docker –æ–±—Ä–∞–∑–æ–≤..." -ForegroundColor Yellow
    
    $imageFiles = @(
        "docker_images\python-3.11-slim.tar",
        "docker_images\smb3-processor-offline.tar"
    )
    
    foreach ($imageFile in $imageFiles) {
        if (Test-Path $imageFile) {
            Write-Host "   –ó–∞–≥—Ä—É–∑–∫–∞ $(Split-Path $imageFile -Leaf)..." -ForegroundColor Gray
            docker load -i $imageFile
        }
    }
    Write-Host "‚úÖ Docker –æ–±—Ä–∞–∑—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã" -ForegroundColor Green
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
if (-not (Test-Path ".env")) {
    if (Test-Path ".env.example") {
        Copy-Item .env.example .env
        Write-Host "üìã –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª .env –∏–∑ —à–∞–±–ª–æ–Ω–∞" -ForegroundColor Cyan
        Write-Host "‚ö†Ô∏è –í–ê–ñ–ù–û: –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã SMB3 –≤ —Ñ–∞–π–ª–µ .env!" -ForegroundColor Yellow
    }
}

Write-Host ""
Write-Host "üéâ Offline —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!" -ForegroundColor Green
Write-Host ""
Write-Host "üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:" -ForegroundColor Cyan
Write-Host "1. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ .env —Ñ–∞–π–ª —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ SMB3" -ForegroundColor White
Write-Host "2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ: python test_smb3.py" -ForegroundColor White
Write-Host "3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–∏—Å: docker-compose -f docker-compose.offline.yml up -d" -ForegroundColor White
Write-Host "4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–±–æ—Ç—É: Invoke-RestMethod http://localhost:3000/health" -ForegroundColor White
'@

$installScript | Out-File -FilePath (Join-Path $scriptDir "install_offline_windows.ps1") -Encoding UTF8

# Batch —Ñ–∞–π–ª –¥–ª—è –∑–∞–ø—É—Å–∫–∞
$batchScript = @'
@echo off
REM start_smb3_windows.bat - –ë—ã—Å—Ç—Ä—ã–π –∑–∞–ø—É—Å–∫ SMB3 File Processor

echo üöÄ –ó–∞–ø—É—Å–∫ SMB3 File Processor –¥–ª—è Windows
echo =========================================

REM –ü—Ä–æ–≤–µ—Ä–∫–∞ .env —Ñ–∞–π–ª–∞
if not exist .env (
    echo üìã –°–æ–∑–¥–∞–Ω–∏–µ .env –∏–∑ —à–∞–±–ª–æ–Ω–∞...
    copy .env.example .env
    echo ‚ö†Ô∏è –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã SMB3 –≤ .env –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–Ω–æ–≤–∞
    notepad .env
    pause
    exit /b
)

REM –¢–µ—Å—Ç SMB3 –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
echo üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ SMB3 –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è...
python test_smb3.py
if errorlevel 1 (
    echo ‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ SMB3!
    pause
    exit /b
)

REM –ó–∞–ø—É—Å–∫ Docker
echo üê≥ –ó–∞–ø—É—Å–∫ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞...
docker-compose -f docker-compose.offline.yml up -d

REM –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞
echo ‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–∞...
timeout /t 15 /nobreak

REM –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç—ã
echo üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏...
powershell -Command "try { $result = Invoke-RestMethod http://localhost:3000/health; Write-Host '‚úÖ Health check: OK' -ForegroundColor Green; Write-Host $result } catch { Write-Host '‚ùå Health check failed' -ForegroundColor Red }"

echo üéâ SMB3 File Processor –∑–∞–ø—É—â–µ–Ω!
echo üåê –°–µ—Ä–≤–∏—Å –¥–æ—Å—Ç—É–ø–µ–Ω: http://localhost:3000
echo üìä –õ–æ–≥–∏: docker-compose -f docker-compose.offline.yml logs -f
pause
'@

$batchScript | Out-File -FilePath (Join-Path $scriptDir "start_smb3_windows.bat") -Encoding ASCII

# –°–æ–∑–¥–∞–Ω–∏–µ –∞—Ä—Ö–∏–≤–∞
Write-Host "üì¶ –°–æ–∑–¥–∞–Ω–∏–µ –∞—Ä—Ö–∏–≤–∞ –¥–ª—è Windows..." -ForegroundColor Yellow

$archiveName = "smb3-processor-windows-offline"
$archivePath = Join-Path $OutputPath "$archiveName.zip"

# –°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –∞—Ä—Ö–∏–≤–∞
$filesToArchive = @(
    "app.py",
    "requirements.txt",
    ".env.example",
    "Dockerfile.offline",
    "docker-compose.offline.yml",
    "test_smb3.py",
    "test_local.py",
    "README_smb_processor.md",
    "WINDOWS_COMMANDS.md",
    "OFFLINE_INSTALL_GUIDE.md",
    "QUICK_START_SMB3.md"
)

# –°–æ–∑–¥–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –∞—Ä—Ö–∏–≤–∞
$tempArchiveDir = Join-Path $OutputPath "temp_archive"
New-Item -ItemType Directory -Force -Path $tempArchiveDir | Out-Null

# –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤
foreach ($file in $filesToArchive) {
    if (Test-Path $file) {
        Copy-Item $file $tempArchiveDir
    }
}

# –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
Copy-Item $offlineDir (Join-Path $tempArchiveDir "offline_packages") -Recurse
Copy-Item $dockerDir (Join-Path $tempArchiveDir "docker_images") -Recurse
Copy-Item $scriptDir (Join-Path $tempArchiveDir "scripts") -Recurse

# –°–æ–∑–¥–∞–Ω–∏–µ –∞—Ä—Ö–∏–≤–∞
try {
    if (Get-Command Compress-Archive -ErrorAction SilentlyContinue) {
        Compress-Archive -Path "$tempArchiveDir\*" -DestinationPath $archivePath -Force
        Write-Host "‚úÖ –ê—Ä—Ö–∏–≤ —Å–æ–∑–¥–∞–Ω: $archivePath" -ForegroundColor Green
    } else {
        Write-Host "‚ö†Ô∏è Compress-Archive –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –§–∞–π–ª—ã –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω—ã –≤: $tempArchiveDir" -ForegroundColor Yellow
    }
}
catch {
    Write-Host "‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∞—Ä—Ö–∏–≤–∞: $_" -ForegroundColor Yellow
    Write-Host "   –§–∞–π–ª—ã –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω—ã –≤: $tempArchiveDir" -ForegroundColor White
}

# –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
if (Test-Path $tempArchiveDir) {
    Remove-Item $tempArchiveDir -Recurse -Force
}

# –ü–æ–¥—Å—á–µ—Ç —Ä–∞–∑–º–µ—Ä–æ–≤
if (Test-Path $archivePath) {
    $archiveSize = [math]::Round((Get-Item $archivePath).Length / 1MB, 1)
    Write-Host "üìä –†–∞–∑–º–µ—Ä –∞—Ä—Ö–∏–≤–∞: $archiveSize MB" -ForegroundColor Cyan
}

$offlineSize = [math]::Round((Get-ChildItem $offlineDir -Recurse | Measure-Object -Property Length -Sum).Sum / 1MB, 1)
$dockerSize = if (Test-Path $dockerDir) { [math]::Round((Get-ChildItem $dockerDir -Recurse | Measure-Object -Property Length -Sum).Sum / 1MB, 1) } else { 0 }

Write-Host ""
Write-Host "‚úÖ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ offline –ø–∞–∫–µ—Ç–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!" -ForegroundColor Green
Write-Host ""
Write-Host "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:" -ForegroundColor Cyan
Write-Host "   Python –ø–∞–∫–µ—Ç—ã: $offlineSize MB" -ForegroundColor White
if (-not $SkipDocker) {
    Write-Host "   Docker –æ–±—Ä–∞–∑—ã: $dockerSize MB" -ForegroundColor White
}
Write-Host "   –û–±—â–∏–π —Ä–∞–∑–º–µ—Ä: $([math]::Round($offlineSize + $dockerSize, 1)) MB" -ForegroundColor White
Write-Host ""
Write-Host "üì¶ –î–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –Ω–∞ Windows –º–∞—à–∏–Ω—É –±–µ–∑ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞:" -ForegroundColor Yellow
Write-Host "   –ê—Ä—Ö–∏–≤: $archivePath" -ForegroundColor White
Write-Host ""
Write-Host "üìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è —Ü–µ–ª–µ–≤–æ–π Windows –º–∞—à–∏–Ω—ã:" -ForegroundColor Cyan
Write-Host "1. –†–∞—Å–ø–∞–∫—É–π—Ç–µ –∞—Ä—Ö–∏–≤" -ForegroundColor White
Write-Host "2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: PowerShell -ExecutionPolicy Bypass -File scripts\install_offline_windows.ps1" -ForegroundColor White
Write-Host "3. –ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: scripts\start_smb3_windows.bat" -ForegroundColor White
Write-Host ""
Write-Host "‚ö†Ô∏è –ù–∞ —Ü–µ–ª–µ–≤–æ–π –º–∞—à–∏–Ω–µ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω Docker Desktop!" -ForegroundColor Yellow
